# Generated by Django 5.2.6 on 2025-09-22 10:55

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Ticker",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("symbol", models.CharField(max_length=20)),
                ("short_name", models.CharField(blank=True, max_length=100, null=True)),
                ("long_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("market", models.CharField(blank=True, max_length=50, null=True)),
                ("quote_type", models.CharField(blank=True, max_length=50, null=True)),
                ("exchange", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "full_exchange_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "financial_currency",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "regular_market_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "regular_market_change",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "regular_market_change_percent",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "regular_market_open",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "regular_market_day_high",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "regular_market_day_low",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "regular_market_previous_close",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "regular_market_volume",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "pre_market_price",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "pre_market_change",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                ("pre_market_change_percent", models.FloatField(blank=True, null=True)),
                (
                    "fifty_day_average",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "two_hundred_day_average",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "dividend_rate",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("dividend_yield", models.FloatField(blank=True, null=True)),
                (
                    "trailing_annual_dividend_rate",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "trailing_annual_dividend_yield",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "eps_trailing_twelve_months",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "eps_forward",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "eps_current_year",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("forward_pe", models.FloatField(blank=True, null=True)),
                ("trailing_pe", models.FloatField(blank=True, null=True)),
                ("price_eps_current_year", models.FloatField(blank=True, null=True)),
                ("market_cap", models.BigIntegerField(blank=True, null=True)),
                ("shares_outstanding", models.BigIntegerField(blank=True, null=True)),
                (
                    "book_value",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                ("price_to_book", models.FloatField(blank=True, null=True)),
                (
                    "average_analyst_rating",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "fifty_two_week_range",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "fifty_two_week_high",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "fifty_two_week_low",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "fifty_two_week_high_change",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "fifty_two_week_low_change",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=20, null=True
                    ),
                ),
                (
                    "fifty_two_week_change_percent",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "market_state",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("crypto_tradeable", models.BooleanField(default=False)),
                ("tradeable", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["symbol", "created_at"],
                        name="market_tick_symbol_8fe840_idx",
                    )
                ],
            },
        ),
    ]
